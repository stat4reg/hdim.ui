library(devtools)
install.packages(hdim.ui)
install.packages("hdim.ui")
?hdim.ui
??hdim.ui
setwd("C:/Users/Nimo0033/OneDrive/PhD/validui/code/final/github")
# install_github("stat4reg/hdim.ui")
install("hdim.ui")
getwd()
# install_github("stat4reg/hdim.ui")
install("hdim.ui")
document("hdim.ui")
setwd("C:/Users/Nimo0033/OneDrive/PhD/validui/code/final/Paper four")
library(foreign)
data=read.dta("C_2010_JOE-dataRS5K.dta")
length(names(data))
#Kennedy's choice of variables
# (1) age, (2) education (less than high school, high
#                         school, greater than high school), (3) white (yes/no), (4) hispanic (yes/no), (5) foreign (yes/no),
# (6) alcohol use, (7) married (yes/no), (8) liver birth order (one, two, greater than 2), (9) number
# of prenatal visits.3
categoricalCovariates=c("dmar","mwhite","mhispan","foreignb","alcohol","dmeduc","dlivord")
#quantitative
continuousCovariates=c("dmage","nprevist")
newData= data[,c("T","dbirwt",categoricalCovariates,continuousCovariates)]
newData$dmeduc[data$dmeduc <12] = "lthighschool"
newData$dmeduc[data$dmeduc == 12] = "highschool"
newData$dmeduc[data$dmeduc >12] = "mthighschool"
newData$dmeduc=as.factor(newData$dmeduc)
newData$dlivord[data$dlivord ==1] = "one"
newData$dlivord[data$dlivord ==2] = "two"
newData$dlivord[data$dlivord >2] = "gttwo"
newData$dlivord=as.factor(newData$dlivord)
length(names(newData))
withInteractions= model.matrix(~ .^2, data = newData[,c(categoricalCovariates,continuousCovariates)])[,-1]
higherorder=poly(cbind(newData[,"dmage"], newData[,"nprevist"]),degree=3)
length(names(newData))
# remove dmage and nprevist interaction bewteen them since it is included in withInteractions
higherorder=higherorder[,-c(1,4,5)]
covariates=cbind(withInteractions,higherorder)
ncol(covariates)
Y=newData[,"dbirwt"]
T=ifelse(newData[,"T"]>=1,1,0)
ui_real=ui.causal(X=covariates,Y=(Y),T=(T),rho0=c(-0.15,0.15),rho1=c(-0.15,0.15),
# subset="double",
subset = "refit", sigma_correction = 'new',
param="ACE", rho.plotrange = c(-0.25, 0.25),regularization_alpha = 1)
plot(ui_real,ylab="ACE")
setwd("C:/Users/Nimo0033/OneDrive/PhD/validui/code/final/github")
# install_github("stat4reg/hdim.ui")
install("hdim.ui")
ui_real=ui.causal(X=covariates,Y=(Y),T=(T),rho0=c(-0.15,0.15),rho1=c(-0.15,0.15),
# subset="double",
subset = "refit", sigma_correction = 'new',
param="ACE", rho.plotrange = c(-0.25, 0.25),regularization_alpha = 1)
setwd("C:/Users/Nimo0033/OneDrive/PhD/validui/code/final/github")
# install_github("stat4reg/hdim.ui")
install("hdim.ui")
document("hdim.ui")
ui_real=ui.causal(X=covariates,Y=(Y),T=(T),rho0=c(-0.15,0.15),rho1=c(-0.15,0.15),
# subset="double",
subset = "refit", sigma_correction = 'new',
param="ACE", rho.plotrange = c(-0.25, 0.25),regularization_alpha = 1)
library(devtools)
setwd("C:/Users/Nimo0033/OneDrive/PhD/validui/code/final/github")
# install_github("stat4reg/hdim.ui")
install("hdim.ui")
document("hdim.ui")
install.packages("usethis")
library(devtools)
setwd("C:/Users/Nimo0033/OneDrive/PhD/validui/code/final/github")
# install_github("stat4reg/hdim.ui")
install("hdim.ui")
document("hdim.ui")
install.packages("rlang")
install.packages("rlang")
library(devtools)
setwd("C:/Users/Nimo0033/OneDrive/PhD/validui/code/final/github")
# install_github("stat4reg/hdim.ui")
install("hdim.ui")
document("hdim.ui")
setwd("C:/Users/Nimo0033/OneDrive/PhD/validui/code/final/Paper four")
library(foreign)
data=read.dta("C_2010_JOE-dataRS5K.dta")
?ui.causal
setwd("C:/Users/Nimo0033/OneDrive/PhD/validui/code/final/Paper four")
library(foreign)
data=read.dta("C_2010_JOE-dataRS5K.dta")
length(names(data))
categoricalCovariates=c("dmar","mwhite","mhispan","foreignb","alcohol","dmeduc","dlivord")
#quantitative
continuousCovariates=c("dmage","nprevist")
newData= data[,c("T","dbirwt",categoricalCovariates,continuousCovariates)]
newData$dmeduc[data$dmeduc <12] = "lthighschool"
newData$dmeduc[data$dmeduc == 12] = "highschool"
newData$dmeduc[data$dmeduc >12] = "mthighschool"
newData$dmeduc=as.factor(newData$dmeduc)
newData$dlivord[data$dlivord ==1] = "one"
newData$dlivord[data$dlivord ==2] = "two"
newData$dlivord[data$dlivord >2] = "gttwo"
newData$dlivord=as.factor(newData$dlivord)
length(names(newData))
withInteractions= model.matrix(~ .^2, data = newData[,c(categoricalCovariates,continuousCovariates)])[,-1]
higherorder=poly(cbind(newData[,"dmage"], newData[,"nprevist"]),degree=3)
length(names(newData))
# remove dmage and nprevist interaction bewteen them since it is included in withInteractions
higherorder=higherorder[,-c(1,4,5)]
covariates=cbind(withInteractions,higherorder)
ncol(covariates)
Y=newData[,"dbirwt"]
T=ifelse(newData[,"T"]>=1,1,0)
ui_real=ui.causal(X=covariates,Y=(Y),T=(T),rho0=c(-0.15,0.15),rho1=c(-0.15,0.15),
# subset="double",
subset = "refit", sigma_correction = 'new',
param="ACE", rho.plotrange = c(-0.25, 0.25),regularization_alpha = 1)
plot(ui_real,ylab="ACE")
library(devtools)
install_github("stat4reg/hdim.ui")
setwd("C:/Users/Nimo0033/OneDrive/PhD/validui/code/final/Paper four")
library(foreign)
data=read.dta("C_2010_JOE-dataRS5K.dta")
length(names(data))
categoricalCovariates=c("dmar","mwhite","mhispan","foreignb","alcohol","dmeduc","dlivord")
#quantitative
continuousCovariates=c("dmage","nprevist")
newData= data[,c("T","dbirwt",categoricalCovariates,continuousCovariates)]
newData$dmeduc[data$dmeduc <12] = "lthighschool"
newData$dmeduc[data$dmeduc == 12] = "highschool"
newData$dmeduc[data$dmeduc >12] = "mthighschool"
newData$dmeduc=as.factor(newData$dmeduc)
newData$dlivord[data$dlivord ==1] = "one"
newData$dlivord[data$dlivord ==2] = "two"
newData$dlivord[data$dlivord >2] = "gttwo"
newData$dlivord=as.factor(newData$dlivord)
length(names(newData))
withInteractions= model.matrix(~ .^2, data = newData[,c(categoricalCovariates,continuousCovariates)])[,-1]
higherorder=poly(cbind(newData[,"dmage"], newData[,"nprevist"]),degree=3)
length(names(newData))
# remove dmage and nprevist interaction bewteen them since it is included in withInteractions
higherorder=higherorder[,-c(1,4,5)]
covariates=cbind(withInteractions,higherorder)
ncol(covariates)
Y=newData[,"dbirwt"]
T=ifelse(newData[,"T"]>=1,1,0)
ui_real=ui.causal(X=covariates,Y=(Y),T=(T),rho0=c(-0.15,0.15),rho1=c(-0.15,0.15),
# subset="double",
subset = "refit", sigma_correction = 'new',
param="ACE", rho.plotrange = c(-0.25, 0.25),regularization_alpha = 1)
library(hdim.ui)
remove.packages("hdim.ui")
install_github("stat4reg/hdim.ui")
library(devtools)
install_github("stat4reg/hdim.ui")
install.packages(mvtnorm)
install.packages("mvtnorm")
install_github("stat4reg/hdim.ui")
all.names
install_github("stat4reg/hdim.ui",dependencies=TRUE)
library(devtools)
install_github("stat4reg/hdim.ui",dependencies=TRUE)
setwd("C:/Users/Nimo0033/OneDrive/PhD/validui/code/final/Paper four")
library(foreign)
data=read.dta("C_2010_JOE-dataRS5K.dta")
length(names(data))
categoricalCovariates=c("dmar","mwhite","mhispan","foreignb","alcohol","dmeduc","dlivord")
#quantitative
continuousCovariates=c("dmage","nprevist")
newData= data[,c("T","dbirwt",categoricalCovariates,continuousCovariates)]
newData$dmeduc[data$dmeduc <12] = "lthighschool"
newData$dmeduc[data$dmeduc == 12] = "highschool"
newData$dmeduc[data$dmeduc >12] = "mthighschool"
newData$dmeduc=as.factor(newData$dmeduc)
newData$dlivord[data$dlivord ==1] = "one"
newData$dlivord[data$dlivord ==2] = "two"
newData$dlivord[data$dlivord >2] = "gttwo"
newData$dlivord=as.factor(newData$dlivord)
length(names(newData))
withInteractions= model.matrix(~ .^2, data = newData[,c(categoricalCovariates,continuousCovariates)])[,-1]
higherorder=poly(cbind(newData[,"dmage"], newData[,"nprevist"]),degree=3)
length(names(newData))
# remove dmage and nprevist interaction bewteen them since it is included in withInteractions
higherorder=higherorder[,-c(1,4,5)]
covariates=cbind(withInteractions,higherorder)
ncol(covariates)
Y=newData[,"dbirwt"]
T=ifelse(newData[,"T"]>=1,1,0)
ui_real=ui.causal(X=covariates,Y=(Y),T=(T),rho0=c(-0.15,0.15),rho1=c(-0.15,0.15),
# subset="double",
subset = "refit", sigma_correction = 'new',
param="ACE", rho.plotrange = c(-0.25, 0.25),regularization_alpha = 1)
??hdim.ui
?hdim.ui
?ui.causal
library(hdim.ui)
ui_real=ui.causal(X=covariates,Y=(Y),T=(T),rho0=c(-0.15,0.15),rho1=c(-0.15,0.15),
# subset="double",
subset = "refit", sigma_correction = 'new',
param="ACE", rho.plotrange = c(-0.25, 0.25),regularization_alpha = 1)
install.packages("hdm")
ui_real=ui.causal(X=covariates,Y=(Y),T=(T),rho0=c(-0.15,0.15),rho1=c(-0.15,0.15),
# subset="double",
subset = "refit", sigma_correction = 'new',
param="ACE", rho.plotrange = c(-0.25, 0.25),regularization_alpha = 1)
library(hdm)
ui_real=ui.causal(X=covariates,Y=(Y),T=(T),rho0=c(-0.15,0.15),rho1=c(-0.15,0.15),
# subset="double",
subset = "refit", sigma_correction = 'new',
param="ACE", rho.plotrange = c(-0.25, 0.25),regularization_alpha = 1)
install.packages("cv.glmnet")
library(glmnet)
ui_real=ui.causal(X=covariates,Y=(Y),T=(T),rho0=c(-0.15,0.15),rho1=c(-0.15,0.15),
# subset="double",
subset = "refit", sigma_correction = 'new',
param="ACE", rho.plotrange = c(-0.25, 0.25),regularization_alpha = 1)
library(devtools)
install_github("stat4reg/hdim.ui")
setwd("C:/Users/Nimo0033/OneDrive/PhD/validui/code/final/Paper four")
library(foreign)
data=read.dta("C_2010_JOE-dataRS5K.dta")
length(names(data))
categoricalCovariates=c("dmar","mwhite","mhispan","foreignb","alcohol","dmeduc","dlivord")
#quantitative
continuousCovariates=c("dmage","nprevist")
newData= data[,c("T","dbirwt",categoricalCovariates,continuousCovariates)]
newData$dmeduc[data$dmeduc <12] = "lthighschool"
newData$dmeduc[data$dmeduc == 12] = "highschool"
newData$dmeduc[data$dmeduc >12] = "mthighschool"
newData$dmeduc=as.factor(newData$dmeduc)
newData$dlivord[data$dlivord ==1] = "one"
newData$dlivord[data$dlivord ==2] = "two"
newData$dlivord[data$dlivord >2] = "gttwo"
newData$dlivord=as.factor(newData$dlivord)
length(names(newData))
withInteractions= model.matrix(~ .^2, data = newData[,c(categoricalCovariates,continuousCovariates)])[,-1]
higherorder=poly(cbind(newData[,"dmage"], newData[,"nprevist"]),degree=3)
length(names(newData))
# remove dmage and nprevist interaction bewteen them since it is included in withInteractions
higherorder=higherorder[,-c(1,4,5)]
covariates=cbind(withInteractions,higherorder)
ncol(covariates)
Y=newData[,"dbirwt"]
T=ifelse(newData[,"T"]>=1,1,0)
ui_real=ui.causal(X=covariates,Y=(Y),T=(T),rho0=c(-0.15,0.15),rho1=c(-0.15,0.15),
# subset="double",
subset = "refit", sigma_correction = 'new',
param="ACE", rho.plotrange = c(-0.25, 0.25),regularization_alpha = 1)
library(hdm)
library(hdim.ui)
library(glmnet)
ui_real=ui.causal(X=covariates,Y=(Y),T=(T),rho0=c(-0.15,0.15),rho1=c(-0.15,0.15),
# subset="double",
subset = "refit", sigma_correction = 'new',
param="ACE", rho.plotrange = c(-0.25, 0.25),regularization_alpha = 1)
devtools)
setwd("C:/Us
library(devtools)
library(devtools)
setwd("C:/Users/Nimo0033/OneDrive/PhD/validui/code/final/Paper four")
library(foreign)
data=read.dta("C_2010_JOE-dataRS5K.dta")
length(names(data))
categoricalCovariates=c("dmar","mwhite","mhispan","foreignb","alcohol","dmeduc","dlivord")
#quantitative
continuousCovariates=c("dmage","nprevist")
newData= data[,c("T","dbirwt",categoricalCovariates,continuousCovariates)]
newData$dmeduc[data$dmeduc <12] = "lthighschool"
newData$dmeduc[data$dmeduc == 12] = "highschool"
newData$dmeduc[data$dmeduc >12] = "mthighschool"
newData$dmeduc=as.factor(newData$dmeduc)
newData$dlivord[data$dlivord ==1] = "one"
newData$dlivord[data$dlivord ==2] = "two"
newData$dlivord[data$dlivord >2] = "gttwo"
newData$dlivord=as.factor(newData$dlivord)
length(names(newData))
withInteractions= model.matrix(~ .^2, data = newData[,c(categoricalCovariates,continuousCovariates)])[,-1]
higherorder=poly(cbind(newData[,"dmage"], newData[,"nprevist"]),degree=3)
length(names(newData))
# withInteractions= model.matrix(~ .^2, data = newData[,c(categoricalCovariates,continuousCovariates)])[,-1]
# higherorder=poly(cbind(newData[,"dmage"], newData[,"nprevist"]),degree=3)
withInteractions= model.matrix(~ .^5, data = newData[,c(categoricalCovariates,continuousCovariates)])[,-1]
higherorder=poly(cbind(newData[,"dmage"], newData[,"nprevist"]),degree=8)
length(names(newData))
# remove dmage and nprevist interaction bewteen them since it is included in withInteractions
higherorder=higherorder[,-c(1,4,5)]
covariates=cbind(withInteractions,higherorder)
ncol(covariates)
Y=newData[,"dbirwt"]
T=ifelse(newData[,"T"]>=1,1,0)
ui_real=ui.causal(X=covariates,Y=(Y),T=(T),rho0=c(-0.15,0.15),rho1=c(-0.15,0.15),
# subset="double",
subset = "refit", sigma_correction = 'new',
param="ACE", rho.plotrange = c(-0.25, 0.25),regularization_alpha = 1)
install("ui")
document("ui")
ui_real=ui.causal(X=covariates,Y=(Y),T=(T),rho0=c(-0.15,0.15),rho1=c(-0.15,0.15),
# subset="double",
subset = "refit", sigma_correction = 'new',
param="ACE", rho.plotrange = c(-0.25, 0.25),regularization_alpha = 1)
ui_real
warnings()
X=covariates
rho0=c(-0.15,0.15)
rho1=c(-0.15,0.15)
subset = "refit"
sigma_correction = 'new'
param="ACE"
rho.plotrange = c(-0.25, 0.25)
regularization_alpha = 1
y.data <- data.frame()
t.data <- data.frame()
Yname <- ""
Tname <- ""
XYnames_preselection <- c()
XTnames_preselection <- c()
out.formula_postselection <- NULL
treat.formula_postselection <- NULL
# Here we define data, and columnnames for XT XY Y and T, in case where the user chosen to 1)give formula and data or 2)X, Y and T seperately
if (!is.null(out.formula) & !is.null(treat.formula) & !is.null(data)) {
if (class(data) != "data.frame") {
stop("Data must be a data frame")
}
names <- all.vars(out.formula)
Yname <- names[1]
Ymodelmatrix <- as.data.frame(model.matrix.lm(out.formula, na.action = NULL)[, -1, drop = FALSE])
XYnames_preselection <- names(Ymodelmatrix)
names <- all.vars(treat.formula)
Tname <- names[1]
Tmodelmatrix <- as.data.frame(model.matrix.lm(treat.formula, na.action = NULL)[, -1, drop = FALSE])
XTnames_preselection <- names(Tmodelmatrix)
covariatesdataframe <- cbind(Ymodelmatrix, Tmodelmatrix)
data <- cbind(data[, Yname, drop = FALSE], data[, Tname, drop = FALSE], covariatesdataframe[, !duplicated(c(names(Ymodelmatrix), names(Tmodelmatrix))), drop = FALSE])
names(data)[1:2] <- c(Yname, Tname)
} else {
if ((is.null(X) | is.null(Y) | is.null(T))) {
stop("Variables cannot be NULL")
}
data <- data.frame(Y = Y, T = T, X)
Yname <- "Y"
Tname <- "T"
XYnames_preselection <- XTnames_preselection <- names(data[-c(1, 2)])
}
out.formula = NULL
treat.formula = NULL
data = NULL
# Here we define data, and columnnames for XT XY Y and T, in case where the user chosen to 1)give formula and data or 2)X, Y and T seperately
if (!is.null(out.formula) & !is.null(treat.formula) & !is.null(data)) {
if (class(data) != "data.frame") {
stop("Data must be a data frame")
}
names <- all.vars(out.formula)
Yname <- names[1]
Ymodelmatrix <- as.data.frame(model.matrix.lm(out.formula, na.action = NULL)[, -1, drop = FALSE])
XYnames_preselection <- names(Ymodelmatrix)
names <- all.vars(treat.formula)
Tname <- names[1]
Tmodelmatrix <- as.data.frame(model.matrix.lm(treat.formula, na.action = NULL)[, -1, drop = FALSE])
XTnames_preselection <- names(Tmodelmatrix)
covariatesdataframe <- cbind(Ymodelmatrix, Tmodelmatrix)
data <- cbind(data[, Yname, drop = FALSE], data[, Tname, drop = FALSE], covariatesdataframe[, !duplicated(c(names(Ymodelmatrix), names(Tmodelmatrix))), drop = FALSE])
names(data)[1:2] <- c(Yname, Tname)
} else {
if ((is.null(X) | is.null(Y) | is.null(T))) {
stop("Variables cannot be NULL")
}
data <- data.frame(Y = Y, T = T, X)
Yname <- "Y"
Tname <- "T"
XYnames_preselection <- XTnames_preselection <- names(data[-c(1, 2)])
}
if (subset != "noselection" & (length(XYnames_preselection) <= 1 | length(XTnames_preselection) <= 1)) {
stop("Variable selection cannot be performed if the number of covariates is not bigger than one.")
}
# which indecies from XY and XT?
XYhat <- XY1hat <- XY0hat <- XThat <- c()
if (!subset == "noselection") {
XY1hat <- vs.hdm(data[data[, Tname] == 1, Yname], data[data[, Tname] == 1, XYnames_preselection])
if (!missing) {
XY0hat <- vs.hdm(data[data[, Tname] == 0, Yname], data[data[, Tname] == 0, XYnames_preselection])
}
# XY1hat=vs.glmnet(data[data[,Tname]==1,Yname],data[data[,Tname]==1,XYnames_preselection],alpha=regularization_alpha)
# XY0hat=vs.glmnet(data[data[,Tname]==0,Yname],data[data[,Tname]==0,XYnames_preselection],alpha=regularization_alpha)
XYhat <- union(XY1hat, XY0hat)
}
missing = FALSE
regularization_alpha = 1
alpha = 0.05
gridn = 21
sand = TRUE
if (!subset == "noselection") {
XY1hat <- vs.hdm(data[data[, Tname] == 1, Yname], data[data[, Tname] == 1, XYnames_preselection])
if (!missing) {
XY0hat <- vs.hdm(data[data[, Tname] == 0, Yname], data[data[, Tname] == 0, XYnames_preselection])
}
# XY1hat=vs.glmnet(data[data[,Tname]==1,Yname],data[data[,Tname]==1,XYnames_preselection],alpha=regularization_alpha)
# XY0hat=vs.glmnet(data[data[,Tname]==0,Yname],data[data[,Tname]==0,XYnames_preselection],alpha=regularization_alpha)
XYhat <- union(XY1hat, XY0hat)
}
XYhat
if (!subset == "noselection" & !subset == "single") {
XThat <- vs.glmnet(data[, Tname], data[, XTnames_preselection], alpha = regularization_alpha)
}
XThat
library(devtools)
install_github("stat4reg/hdim.ui")
library(MASS)
## ADD:
library(hdm)
library(glmnet)
## END
n <- 500
rho <- 0.3
x <- rnorm(n)
s0 <- 2 ## what are those used for?
s1 <- 3
error <- mvrnorm(
n, c(0, 0, 0),
matrix(c(1, 0.6, 0.9, 0.6, 4, 0.54, 0.9, 0.54, 9), ncol = 3)
)
delta <- c(-0.3, 0.65)
tstar <- cbind(1, x) %*% delta + error[, 1]
t <- tstar > 0
y1 <- -2 + x - 3 * x^2 + error[, 3]
y0 <- 0.5 + 2 * x - x^2 + error[, 2]
y <- y0
y[t == 1] <- y1[t == 1]
data <- data.frame(y, t, x)
mean(y1 - y0)
ui <- ui.causal(
Y = y, T = t, X = cbind(x, x^2),
rho0 = c(0, 0.4), rho1 = c(0, 0.4),
subset = "double", param = "ACE", sigma_correction = 'new'
)
plot(ui) ## Doesn't work
library(hdim.ui)
remove.packages("hdim.ui")
library(devtools)
install_github("stat4reg/hdim.ui")
install_github("stat4reg/hdim.ui")
library(devtools)
install_github("stat4reg/hdim.ui")
library(MASS)
## ADD:
library(hdm)
library(glmnet)
n <- 500
rho <- 0.3
x <- rnorm(n)
s0 <- 2 ## what are those used for?
s1 <- 3
error <- mvrnorm(
n, c(0, 0, 0),
matrix(c(1, 0.6, 0.9, 0.6, 4, 0.54, 0.9, 0.54, 9), ncol = 3)
)
delta <- c(-0.3, 0.65)
tstar <- cbind(1, x) %*% delta + error[, 1]
t <- tstar > 0
y1 <- -2 + x - 3 * x^2 + error[, 3]
y0 <- 0.5 + 2 * x - x^2 + error[, 2]
y <- y0
y[t == 1] <- y1[t == 1]
data <- data.frame(y, t, x)
mean(y1 - y0)
ui <- ui.causal(
Y = y, T = t, X = cbind(x, x^2),
rho0 = c(0, 0.4), rho1 = c(0, 0.4),
subset = "double", param = "ACE", sigma_correction = 'new'
)
library(hdim.ui)
ui <- ui.causal(
Y = y, T = t, X = cbind(x, x^2),
rho0 = c(0, 0.4), rho1 = c(0, 0.4),
subset = "double", param = "ACE", sigma_correction = 'new'
)
plot(ui) ## Doesn't work
plot.ui(ui) ## This works :)
install_github("stat4reg/hdim.ui")
install_github("stat4reg/hdim.ui")
